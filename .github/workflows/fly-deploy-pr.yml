name: Fly Deploy Disctictr V2 PR
on:
    pull_request:
        types: [opened, reopened, synchronize, closed]
env:
    FLY_API_TOKEN: ${{ secrets.FLY_ORG_TOTKEN }}
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    FLY_REGION: "iad"
    FLY_ORG: "mggg"
jobs:
    pr_review_app:
        runs-on: ubuntu-latest

        concurrency:
            group: pr-${{ github.event.number }}

        environment:
            name: pr-${{ github.event.number }}
            # url: ${{ steps.deploy-app.outputs.url }}

        steps:
            - uses: actions/checkout@v3
            - uses: superfly/flyctl-actions/setup-flyctl@master
            
            
            # fork new db from existing db
            - name: Fork From DB
              id: fork-db
              run: |                
                flyctl postgres create \
                --name pr-${{ github.event.number }}-db \
                --region ewr \
                --initial-cluster-size 1 \
                --vm-size shared-cpu-2x \
                -p ${{ secrets.FLY_PR_PG_PASSWORD }} \
                --org mggg \
                --fork-from districtr-v2-db 
                echo "::set-output name=name::pr-${{ github.event.number }}-db"
                echo "::set-output name=password::$(flyctl postgres credentials pr-${{ github.event.number }}-db | grep Password | awk '{print $2}')"
                

            # manually launch and deploy the api app
            - name: launch fly api app
              run: |
                flyctl launch \
                --no-deploy --copy-config --name pr-${{ github.event.number }}-api \
                --build-arg POSTGRES_SCHEME="postgresql+psycopg" \
                --build-arg POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
                --build-arg POSTGRES_USER="postgres" \
                --build-arg POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
                --build-arg POSTGRES_DB="districtr_v2_api" \
                --build-arg BACKEND_CORS_ORIGINS=[${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app.fly.dev,https://districtr-v2-frontend.fly.dev,https://districtr-v2-api.fly.dev,http://localhost:3000] \
                --build-secret POSTGRES_SCHEME="postgresql+psycopg" \
                --build-secret POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
                --build-secret POSTGRES_USER="postgres" \
                --build-secret POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
                --build-secret POSTGRES_DB="districtr_v2_api" \
                --build-secret BACKEND_CORS_ORIGINS=[${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app.fly.dev,https://districtr-v2-frontend.fly.dev,https://districtr-v2-api.fly.dev,http://localhost:3000]
              working-directory: backend

            - name: deploy fly api app
              run: |
                    flyctl deploy \
                    --config fly.toml --app pr-${{ github.event.number }}-api \
                    --strategy immediate '--ha=false' --vm-cpu-kind shared --vm-cpus 1 --vm-memory 256 \
                    --build-arg POSTGRES_SCHEME="postgresql+psycopg" \
                    --build-arg POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
                    --build-arg POSTGRES_USER="postgres" \
                    --build-arg POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
                    --build-arg POSTGRES_DB="districtr_v2_api" \
                    --build-arg BACKEND_CORS_ORIGINS=[${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app.fly.dev,https://districtr-v2-frontend.fly.dev,https://districtr-v2-api.fly.dev,http://localhost:3000] \
                    --build-secret POSTGRES_SCHEME="postgresql+psycopg" \
                    --build-secret POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
                    --build-secret POSTGRES_USER="postgres" \
                    --build-secret POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
                    --build-secret POSTGRES_DB="districtr_v2_api" \
                    --build-secret BACKEND_CORS_ORIGINS=[${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app.fly.dev,https://districtr-v2-frontend.fly.dev,https://districtr-v2-api.fly.dev,http://localhost:3000]

              working-directory: backend

            # create copies of the app and api
            # - name: Deploy API
            #   id: deploy-api
            #   uses: joeyrichter/fly-pr-review-apps@0.1
            #   with: 
            #     name: pr-${{ github.event.number }}-api
            #     path: backend             
            #     region: ewr
            #     build_secrets: |
            #         NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}
            #     postgres: ${{ steps.fork-db.outputs.name }}

            # attach the db to the api and set secrets
            # - name: Attach DB to API
            #   run: |
            #     flyctl secrets set \
            #     -a pr-${{ github.event.number }}-api \
            #     # POSTGRES_SCHEME="postgresql+psycopg" \
            #     POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
            #     POSTGRES_USER="postgres" \
            #     POSTGRES_PASSWORD=${{ secrets.FLY_PR_PG_PASSWORD }} \
            #     POSTGRES_DB="districtr_v2_api" \
            #     BACKEND_CORS_ORIGINS=[${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app.fly.dev,https://districtr-v2-frontend.fly.dev,https://districtr-v2-api.fly.dev,http://localhost:3000]


            
            - name: Launch Fly App
              id: launch
              run: |
                # Set the necessary variables
                app="${{ github.event.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}-app"
                config="fly.toml"

                # Run the flyctl launch command
                flyctl launch \
                --no-deploy --copy-config --name "$app" \
                --build-arg NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                --build-arg NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
                --build-secret NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                --build-secret NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}

                # Output app name for use in the deploy step
                echo "app_name=$app" >> $GITHUB_ENV
              working-directory: app
                
            - name: Deploy Fly App
              run: |
                app_name=${{ env.app_name }}
                config="fly.toml"

                flyctl deploy --config "$config" --app "$app_name" \
                --strategy immediate '--ha=false' \
                --build-arg NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                --build-arg NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
                --build-secret NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                --build-secret NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
                --vm-cpu-kind shared --vm-cpus 1 --vm-memory 256
              working-directory: app
          
            # set secrets for app
            - name: Set App Secrets
              run: |
                app_name=${{ env.app_name }}
                flyctl secrets set \
                -a "$app_name" \
                NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} 
