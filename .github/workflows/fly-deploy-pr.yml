name: Fly Deploy Disctictr V2 PR
on:
    pull_request:
        types: [opened, reopened, synchronize, closed]
env:
    FLY_API_TOKEN: ${{ secrets.FLY_ORG_TOTKEN }}
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    FLY_REGION: "iad"
    FLY_ORG: "mggg"
jobs:
    pr_review_app:
        runs-on: ubuntu-latest

        concurrency:
            group: pr-${{ github.event.number }}

        environment:
            name: pr-${{ github.event.number }}
            # url: ${{ steps.deploy-app.outputs.url }}

        steps:
            - uses: actions/checkout@v3
            - uses: superfly/flyctl-actions/setup-flyctl@master
            
            
            # fork new db from existing db
            # confirm view command line that tables are created, 
            # and e.g. gerrydbtable has records that we would expect
            # - name: Fork From DB
            #   id: fork-db
            #   run: |                
            #     flyctl postgres create \
            #     --name pr-${{ github.event.number }}-db \
            #     --region ewr \
            #     --initial-cluster-size 1 \
            #     --vm-size shared-cpu-2x \
            #     -p ${{ secrets.FLY_PR_PG_PASSWORD }} \
            #     --org mggg \
            #     --fork-from districtr-v2-db 
            #     echo "::set-output name=name::pr-${{ github.event.number }}-db"
            #     echo "::set-output name=password::$(flyctl postgres credentials pr-${{ github.event.number }}-db | grep Password | awk '{print $2}')"

            # # create copies of the app and api
            # - name: Deploy API
            #   id: deploy-api
            #   uses: joeyrichter/fly-pr-review-apps@0.1
            #   with: 
            #     name: pr-${{ github.event.number }}-api
            #     path: backend             
            #     region: ewr
            #     build_secrets: |
            #         NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}

            # # attach the db to the api and set secrets
            # # confirming that db can be hit via /db_is_alive
            # - name: Attach DB to API
            #   run: |
            #     flyctl secrets set \
            #     -a pr-${{ github.event.number }}-api \
            #     DATABASE_URL="postgresql://postgres:${{ secrets.FLY_PR_PG_PASSWORD }}@${{ steps.fork-db.outputs.name }}.flycast:5432?sslmode=disable" \
            #     POSTGRES_SCHEME="postgresql+psycopg" \
            #     POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
            #     POSTGRES_USER="postgres" \
            #     POSTGRES_PASSWORD=${{ secrets.FLY_PR_PG_PASSWORD }} \
            #     POSTGRES_DB="postgres"                                                        


            # - name: launch app
            #   id: launch-app
            #   run: |
            #     flyctl launch \
            #     --no-deploy --copy-config --name pr-${{ github.event.number }}-app \
            #     --build-arg https://pr-${{ github.event.number }}-api.fly.dev \
            #     --build-arg NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
            #     --build-secret https://pr-${{ github.event.number }}-api.fly.dev \
            #     --build-secret NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}
            #   working-directory: app 
              
            - name: deploy app
              id: deploy-app
              run: |
                flyctl deploy \
                --app pr-${{ github.event.number }}-app \
                --regions ewr --image \
                --build-arg https://pr-${{ github.event.number }}-api.fly.dev \
                --build-arg NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
                --build-secret https://pr-${{ github.event.number }}-api.fly.dev \
                --build-secret NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} \
                --vm-cpu-kind shared --vm-cpus 1 --vm-memory 256
              

            # set secrets for app
            - name: Set App Secrets
              run: |
                flyctl secrets set \
                -a pr-${{ github.event.number }}-app \
                NEXT_PUBLIC_API_URL=https://pr-${{ github.event.number }}-api.fly.dev \
                NEXT_PUBLIC_S3_BUCKET_URL=${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}} 


            # manual launching and deploying, to try and set the build args and port properly
            # - name: Launch App
            #   run: |
            #     flyctl launch \
            #     --name pr-${{ github.event.number }}-app \
            #     --org mggg \
            #     --path app \
            #     --dockerfile Dockerfile \
            #     --internal-port 3000 \
            #     --build-arg NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
            #     --build-arg NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}" 
            

            # - name: Deploy App
            #   run: |
            #     flyctl deploy \
            #     --remote-only \
            #     --app pr-${{ github.event.number }}-app \
            #     --build-arg NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
            #     --build-arg NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}"
                
            #   working-directory: app
            #   env:
            #     NEXT_PUBLIC_API_URL: "https://pr-${{ github.event.number }}-api.fly.dev" 
            #     NEXT_PUBLIC_S3_BUCKET_URL: ${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}

            #     --env NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
            #     --env NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}"

            #  \
                # --build-arg NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
                # --build-arg NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}" 



# slop
# deploy the api
# - name: launch and deploy copy of API
# run: |
#   flyctl launch \
#   --name pr-${{ github.event.number }}-api \
#   --org mggg \
#   --path backend \
#   --dockerfile Dockerfile \
#   --internal-port 8000 \
#   --build-arg DATABASE_URL="postgresql://postgres:${{ steps.fork-db.outputs.password }}@${{ steps.fork-db.outputs.name }}:5432?sslmode=disable" \
#   --build-arg POSTGRES_SCHEME="postgresql+psycopg" \
#   --build-arg POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}" \
#   --build-arg POSTGRES_USER="postgres" \
#   --build-arg POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
#   --build-arg POSTGRES_DB="postgres"
#   flyctl deploy \
#   --remote-only \
#   --app pr-${{ github.event.number }}-api \
#   --build-arg DATABASE_URL="postgresql://postgres:${{ steps.fork-db.outputs.password }}@${{ steps.fork-db.outputs.name }}:5432?sslmode=disable" \
#   --build-arg POSTGRES_SCHEME="postgresql+psycopg" \
#   --build-arg POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}" \
#   --build-arg POSTGRES_USER="postgres" \
#   --build-arg POSTGRES_PASSWORD=${{ steps.fork-db.outputs.password }} \
#   --build-arg POSTGRES_DB="postgres"

  
# working-directory: backend  