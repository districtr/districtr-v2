name: Fly Deploy Disctictr V2 PR
on:
    pull_request:
        types: [opened, reopened, synchronize, closed]
env:
    FLY_API_TOKEN: ${{ secrets.FLY_ORG_TOTKEN }}
    SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
    FLY_REGION: "iad"
    FLY_ORG: "mggg"
jobs:
    pr_review_app:
        runs-on: ubuntu-latest

        concurrency:
            group: pr-${{ github.event.number }}

        environment:
            name: pr-${{ github.event.number }}
            url: ${{ steps.deploy-app.outputs.url }}

        steps:
            - uses: actions/checkout@v3
            - uses: superfly/flyctl-actions/setup-flyctl@master
            
            # fork new db from existing db
            # - name: Fork From DB
            #   id: fork-db
            #   run: |                
            #     flyctl postgres create \
            #     --name pr-${{ github.event.number }}-db \
            #     --region ewr \
            #     --initial-cluster-size 1 \
            #     --vm-size shared-cpu-2x \
            #     -p ${{ secrets.FLY_PR_PG_PASSWORD }} \
            #     --org mggg \
            #     --fork-from districtr-v2-db 
            #     echo "::set-output name=name::pr-${{ github.event.number }}-db"
            #     echo "::set-output name=password::$(flyctl postgres credentials pr-${{ github.event.number }}-db | grep Password | awk '{print $2}')"

            # # create copies of the app and api
            # - name: Deploy API
            #   id: deploy-api
            #   uses: superfly/fly-pr-review-apps@1.0.0              
            #   with: 
            #     name: pr-${{ github.event.number }}-api
            #     path: backend             

            # # attach the db to the api and set secrets
            # - name: Attach DB to API
            #   run: |
            #     flyctl secrets set \
            #     -a pr-${{ github.event.number }}-api \
            #     DATABASE_URL="postgresql://postgres:${{ secrets.FLY_PR_PG_PASSWORD }}@${{ steps.fork-db.outputs.name }}.flycast:5432?sslmode=disable" \
            #     POSTGRES_SCHEME="postgresql+psycopg" \
            #     POSTGRES_SERVER="${{ steps.fork-db.outputs.name }}.flycast" \
            #     POSTGRES_USER="postgres" \
            #     POSTGRES_PASSWORD=${{ secrets.FLY_PR_PG_PASSWORD }} \
            #     POSTGRES_DB="postgres"                                                        

            - name: Launch App
              run: |
                flyctl launch \
                --name pr-${{ github.event.number }}-app \
                --org mggg \
                --path app \
                --dockerfile Dockerfile \
                --build-arg NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
                --build-arg NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}"

            # - name: Deploy App
            #   run: |
            #     flyctl deploy \
            #     --remote-only \
            #     --app pr-${{ github.event.number }}-app \
            #     --env NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
            #     --env NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}"

            - name: Deploy App
              id: deploy-app
              uses: superfly/fly-pr-review-apps@1.0.0
              with: 
                name: pr-${{ github.event.number }}-app
                path: app

            
            # # set secrets for app
            # - name: Set App Secrets
            #   run: |
            #     flyctl secrets set \
            #     -a pr-${{ github.event.number }}-app \
            #     NEXT_PUBLIC_API_URL="https://pr-${{ github.event.number }}-api.fly.dev" \
            #     NEXT_PUBLIC_S3_BUCKET_URL="${{secrets.NEXT_PUBLIC_S3_BUCKET_URL}}" 
                