"""add gerrydb schema

Revision ID: 966d8d72887e
Revises:
Create Date: 2024-07-20 10:50:48.136439

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from app.models import UUIDType


# revision identifiers, used by Alembic.
revision: str = "966d8d72887e"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text("CREATE EXTENSION IF NOT EXISTS postgis"))
    op.execute(sa.text("CREATE SCHEMA IF NOT EXISTS gerrydb"))
    op.create_table(
        "gerrydbtable",
        sa.Column(
            "created_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("uuid", UUIDType(), nullable=True),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
        sa.UniqueConstraint("uuid"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("gerrydbtable")
    op.execute(sa.text("DROP SCHEMA IF EXISTS gerrydb CASCADE"))
    op.execute(sa.text("DROP EXTENSION IF EXISTS postgis"))
    # ### end Alembic commands ###
