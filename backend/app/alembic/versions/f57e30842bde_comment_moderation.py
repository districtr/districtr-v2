"""comment moderation

Revision ID: f57e30842bde
Revises: 846afa42e0cb
Create Date: 2025-08-08 00:39:23.164942

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f57e30842bde"
down_revision: Union[str, None] = "846afa42e0cb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

review_status_enum = sa.Enum(
    "reviewed",
    "approved",
    "rejected",
    name="review_status_enum",
    schema="comments",
)


def upgrade() -> None:
    bind = op.get_bind()
    review_status_enum.create(bind, checkfirst=True)
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "comment",
        sa.Column("moderation_score", sa.Float(), nullable=True),
        schema="comments",
    )
    op.add_column(
        "comment",
        sa.Column(
            "review_status",
            review_status_enum,
            nullable=True,
        ),
        schema="comments",
    )
    op.add_column(
        "commenter",
        sa.Column("moderation_score", sa.Float(), nullable=True),
        schema="comments",
    )
    op.add_column(
        "commenter",
        sa.Column(
            "review_status",
            review_status_enum,
            nullable=True,
        ),
        schema="comments",
    )
    op.add_column(
        "tag",
        sa.Column("moderation_score", sa.Float(), nullable=True),
        schema="comments",
    )
    op.add_column(
        "tag",
        sa.Column(
            "review_status",
            review_status_enum,
            nullable=True,
        ),
        schema="comments",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("tag", "moderation_score", schema="comments")
    op.drop_column("commenter", "moderation_score", schema="comments")
    op.drop_column("comment", "moderation_score", schema="comments")
    op.drop_column("tag", "review_status", schema="comments")
    op.drop_column("commenter", "review_status", schema="comments")
    op.drop_column("comment", "review_status", schema="comments")
    bind = op.get_bind()
    review_status_enum.drop(bind, checkfirst=True)
    # ### end Alembic commands ###
