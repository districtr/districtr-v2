"""pop table

Revision ID: cb7cd5fd35d8
Revises:
Create Date: 2024-07-16 22:47:09.900729

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text
from sqlmodel.sql import sqltypes
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = "cb7cd5fd35d8"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(text("CREATE EXTENSION IF NOT EXISTS postgis"))
    op.create_table(
        "population",
        sa.Column("path", sqltypes.AutoString(), nullable=False),
        sa.Column("area_land", sa.Integer(), nullable=False),
        sa.Column("area_water", sa.Integer(), nullable=False),
        sa.Column("other_pop", sa.Integer(), nullable=False),
        sa.Column("total_pop", sa.Integer(), nullable=False),
        sa.Column(
            "geography",
            geoalchemy2.types.Geometry(
                geometry_type="POLYGON",
                srid=4269,
                from_text="ST_GeomFromEWKT",
                name="geometry",
            ),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("path"),
    )
    # NOTE: geospatial indices are created by default
    # op.create_index('idx_population_geography', 'population', ['geography'], unique=False, postgresql_using='gist')
    op.create_index(op.f("ix_population_path"), "population", ["path"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_population_path"), table_name="population")
    op.drop_index(
        "idx_population_geography", table_name="population", postgresql_using="gist"
    )
    op.drop_table("population")
    op.execute(text("DROP EXTENSION IF EXISTS postgis"))
    # ### end Alembic commands ###
