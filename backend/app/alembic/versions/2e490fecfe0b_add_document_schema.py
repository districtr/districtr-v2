"""add document schema

Revision ID: 2e490fecfe0b
Revises: b7adbf498feb
Create Date: 2024-08-06 17:26:40.747235

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2e490fecfe0b"
down_revision: Union[str, None] = "b7adbf498feb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("assignments")
    op.drop_table("document")
    op.execute("create schema document;")
    op.create_table(
        "document",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("document_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("gerrydb_table", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("document_id", name="document_pkey"),
        schema="document",
    )
    op.create_table(
        "assignments",
        sa.Column("document_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("geo_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("zone", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("document_id", "geo_id", name="document_geo_id_unique"),
        postgresql_partition_by="LIST (document_id)",
        schema="document",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("assignments", schema="document")
    op.drop_table("document", schema="document")
    op.execute("DROP SCHEMA document")
    op.create_table(
        "document",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("document_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("gerrydb_table", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("document_id", name="document_pkey"),
    )
    op.create_table(
        "assignments",
        sa.Column("document_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("geo_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("zone", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("document_id", "geo_id", name="document_geo_id_unique"),
        postgresql_partition_by="LIST (document_id)",
    )
    # ### end Alembic commands ###
